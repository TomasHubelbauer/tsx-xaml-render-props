{"version":3,"sources":["Toggle.tsx","Slider.tsx","App.tsx","index.tsx"],"names":["OnContent","this","props","children","Component","OffContent","Toggle","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","state","checked","counter","onContent","offContent","Children","forEach","child","isValidElement","type","push","react_default","a","createElement","className","htmlFor","title","id","Slide","Slider","selectedSlideTitle","handleSlideButtonClick","event","slideTitle","currentTarget","dataset","_this2","slides","slide","find","s","orientation","map","data-title","onClick","childrenPlacement","App","Fragment","Toggle_Toggle","Slider_Slider","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.dc17c39e.chunk.js","sourcesContent":["import './Toggle.css';\r\nimport React, { Component, ReactNode, Children, isValidElement, ReactElement } from 'react';\r\n\r\nclass OnContent extends Component {\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nclass OffContent extends Component {\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\ntype ToggleProps = {\r\n  title: string;\r\n  checked: boolean;\r\n};\r\n\r\ntype ToggleState = {\r\n  checked: boolean;\r\n}\r\n\r\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\r\n  // Keep the ID pairing `label` and `input` unique for each `Toggle` instance - see the constructor\r\n  private static counter = 0;\r\n\r\n  static OnContent = OnContent;\r\n\r\n  static OffContent = OffContent;\r\n\r\n  constructor(props: ToggleProps) {\r\n    super(props);\r\n    this.state = { checked: props.checked };\r\n    Toggle.counter++;\r\n  }\r\n\r\n  render() {\r\n    let children: ReactNode[] = [];\r\n    let onContent: ReactElement | undefined;\r\n    let offContent: ReactElement | undefined;\r\n    Children.forEach(this.props.children, child => {\r\n      if (isValidElement(child)) {\r\n        switch (child.type) {\r\n          case Toggle.OnContent: onContent = child; break;\r\n          case Toggle.OffContent: offContent = child; break;\r\n          default: children.push(child);\r\n        }\r\n      } else {\r\n        children.push(child);\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"Toggle\">\r\n        <label htmlFor={Toggle.counter + 'Toggle'}>{this.props.title}</label>\r\n        <input type=\"checkbox\" id={Toggle.counter + 'Toggle'} checked={this.state.checked} onChange={this.onChange} />\r\n        {this.state.checked ? onContent : offContent}\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private readonly onChange = () => {\r\n    this.setState(state => ({ checked: !state.checked }));\r\n  };\r\n}\r\n","import './Slider.css';\r\nimport React, { Component, MouseEventHandler, ReactNode, ReactElement, Children, isValidElement } from 'react';\r\n\r\ntype SlideProps = {\r\n  title: string;\r\n};\r\n\r\nclass Slide extends Component<SlideProps> {\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\ntype SliderProps = {\r\n  orientation: 'horizontal' | 'vertical';\r\n  childrenPlacement: 'slides' | 'slide';\r\n};\r\n\r\ntype SliderState = {\r\n  selectedSlideTitle: string | null;\r\n};\r\n\r\nexport default class Slider extends Component<SliderProps, SliderState> {\r\n  static Slide = Slide;\r\n\r\n  readonly state: SliderState = { selectedSlideTitle: null };\r\n\r\n  render() {\r\n    const children: ReactNode[] = [];\r\n    const slides: ReactElement<SlideProps & React.Props<never>>[] = [];\r\n    Children.forEach(this.props.children, child => {\r\n      if (isValidElement(child) && child.type === Slide) {\r\n        slides.push(child as ReactElement<SlideProps & React.Props<never>>);\r\n      } else {\r\n        children.push(child);\r\n      }\r\n    });\r\n\r\n    const slide = slides.find(s => s.props.title === this.state.selectedSlideTitle);\r\n    return (\r\n      <div className={'Slider Slider-' + this.props.orientation}>\r\n        <div className=\"Slider-slides\">\r\n          {slides.map(s => <button className={slide && slide.props.title === s.props.title ? 'selected' : ''} data-title={s.props.title} onClick={this.handleSlideButtonClick}>{s.props.title}</button>)}\r\n        </div>\r\n        <div className=\"Slider-slide\">\r\n          {slide && slide.props.children}\r\n          {this.props.childrenPlacement === 'slide' && children}\r\n        </div>\r\n        {this.props.childrenPlacement === 'slides' && children}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  private readonly handleSlideButtonClick: MouseEventHandler<HTMLButtonElement> = event => {\r\n    const slideTitle = event.currentTarget.dataset.title!;\r\n    this.setState({ selectedSlideTitle: slideTitle });\r\n  };\r\n}\r\n","import React, { Component } from 'react';\nimport Toggle from './Toggle';\nimport Slider from './Slider';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <Toggle title=\"Test\" checked>\n          <Toggle.OnContent>checked!</Toggle.OnContent>\n          <Toggle.OffContent>unchecked!</Toggle.OffContent>\n          ‚≠ê\n        </Toggle>\n        <hr />\n        <Slider orientation=\"horizontal\" childrenPlacement=\"slide\">\n          <Slider.Slide title=\"Slide 1\">Slide #1 content</Slider.Slide>\n          <Slider.Slide title=\"Slide 2\">Slide #2 content</Slider.Slide>\n          <Slider.Slide title=\"Slide 3\">Slide #3 content</Slider.Slide>\n          <Slider.Slide title=\"Slide 4\">Slide #4 content</Slider.Slide>\n          <div>Extra content</div>\n        </Slider>\n      </>\n    );\n  }\n};\n","import './index.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}